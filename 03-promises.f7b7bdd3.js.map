{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAC9BC,EAAaF,SAASC,cAAc,uBACpCE,EAAYH,SAASC,cAAc,sBACnCG,EAAcJ,SAASC,cAAc,wBAmB3C,SAASI,EAAcC,EAAUC,GACb,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEK,SAAAR,EAAUS,MAAAR,IAGpBG,EAAO,CAAEI,SAAAR,EAAUS,MAAAR,G,GAEpBA,E,IAIJS,MAAK,SAAAC,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MACjBG,EAAArB,GAASsB,OAAOC,QAAQ,uBAAwCC,OAAfP,EAAS,QAAYO,OAANN,EAAM,M,IAEvEO,OAAM,SAAAL,G,IAAGH,EAAQG,EAARH,SAAUC,EAAKE,EAALF,MAClBG,EAAArB,GAASsB,OAAOI,QAAQ,sBAAqCF,OAAfP,EAAS,QAAYO,OAANN,EAAM,M,IAnCzEhB,EAAKyB,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAMC,iBAMN,IALA,IAAMC,EAAaC,OAAO,GAAoBP,OAAjBnB,EAAW2B,QAClCC,EAAYF,OAAO,GAAmBP,OAAhBlB,EAAU0B,QAChCE,EAAeH,OAAO,GAAqBP,OAAlBjB,EAAYyB,QAEvCG,EAAeL,EACVM,EAAI,EAAGA,EAAIF,EAAcE,GAAK,EAChB,IAAjBD,IACFA,GAAgBF,GAElBzB,EAAc4B,EAAI,EAAGD,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst delayInput = document.querySelector('input[name=\"delay\"]');\nconst stepInput = document.querySelector('input[name=\"step\"]');\nconst amountInput = document.querySelector('input[name=\"amount\"]');\n\nform.addEventListener('submit', onFormSubmit);\n\nfunction onFormSubmit(event) {\n  event.preventDefault();\n  const firstDelay = Number(`${delayInput.value}`);\n  const stepDelay = Number(`${stepInput.value}`);\n  const promiseCount = Number(`${amountInput.value}`);\n  \n  let currentDelay = firstDelay;\n  for (let i = 0; i < promiseCount; i += 1) {\n    if (currentDelay !== 0) {\n      currentDelay += stepDelay;\n    }\n    createPromise(i + 1, currentDelay);\n  }\n}\n\nfunction createPromise(position, delay) {\n    const promise = new Promise((resolve, reject) => {\n      setTimeout(() => {\n        const shouldResolve = Math.random() > 0.3;\n        if (shouldResolve) {\n          resolve({ position, delay });\n        }\n        else {\n          reject({ position, delay });\n        }\n      }, delay);\n    });\n\n  promise\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$delayInput","$ce04d3a99e08e73b$var$stepInput","$ce04d3a99e08e73b$var$amountInput","$ce04d3a99e08e73b$var$createPromise","position1","delay1","Promise","resolve","reject","setTimeout","Math","random","position","delay","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","addEventListener","event","preventDefault","firstDelay","Number","value","stepDelay","promiseCount","currentDelay","i"],"version":3,"file":"03-promises.f7b7bdd3.js.map"}